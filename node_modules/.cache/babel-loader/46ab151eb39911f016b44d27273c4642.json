{"ast":null,"code":"import axios from 'axios';\nimport { EMAIL_CHANGED, PASSWORD_CHANGED, LOGIN_USER_SUCCESS, LOGIN_USER_FAIL, LOGIN_USER } from './types';\nexport const emailChanged = email => {\n  return {\n    type: EMAIL_CHANGED,\n    payload: email\n  };\n};\nexport const passwordChanged = text => {\n  return {\n    type: PASSWORD_CHANGED,\n    payload: text\n  };\n};\n\nconst passtoken = token => {\n  localStorage.setItem('jwtToken', token); // let value = localStorage.getItem('jwtToken');\n};\n\nexport const loginUserSuccess = token => {\n  passtoken(token);\n  return {\n    type: LOGIN_USER_SUCCESS,\n    payload: token\n  };\n};\nexport const loginUserFail = () => {\n  return {\n    type: LOGIN_USER_FAIL\n  };\n};\nexport const authStart = () => {\n  return {\n    type: LOGIN_USER\n  };\n}; //curly braces implies thsat the function is expected to be called with objects\n\nexport const loginUser = ({\n  email,\n  password\n}) => {\n  return dispatch => {\n    dispatch(authStart());\n    let authData = {\n      email: email,\n      password: password,\n      returnSecureToken: true\n    };\n    axios.post('http://localhost:5000/api/auth', authData).then(response => {\n      dispatch(loginUserSuccess(response.data.token));\n    }).catch(err => {\n      dispatch(loginUserFail());\n    });\n  };\n};","map":{"version":3,"sources":["/home/anita/minorProjects/UDL_Backend/UDL-frontend-/src/actions/index.js"],"names":["axios","EMAIL_CHANGED","PASSWORD_CHANGED","LOGIN_USER_SUCCESS","LOGIN_USER_FAIL","LOGIN_USER","emailChanged","email","type","payload","passwordChanged","text","passtoken","token","localStorage","setItem","loginUserSuccess","loginUserFail","authStart","loginUser","password","dispatch","authData","returnSecureToken","post","then","response","data","catch","err"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SACIC,aADJ,EAEKC,gBAFL,EAGKC,kBAHL,EAIKC,eAJL,EAKKC,UALL,QAMW,SANX;AAQA,OAAO,MAAMC,YAAY,GAAIC,KAAD,IAAU;AAClC,SAAM;AACFC,IAAAA,IAAI,EAACP,aADH;AAEFQ,IAAAA,OAAO,EAACF;AAFN,GAAN;AAIH,CALM;AAOP,OAAO,MAAMG,eAAe,GAAIC,IAAD,IAAS;AACpC,SAAM;AACFH,IAAAA,IAAI,EAACN,gBADH;AAEFO,IAAAA,OAAO,EAACE;AAFN,GAAN;AAIH,CALM;;AAMP,MAAMC,SAAS,GAAIC,KAAD,IAAU;AAExBC,EAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAgCF,KAAhC,EAFwB,CAGxB;AAGH,CAND;;AAOA,OAAO,MAAMG,gBAAgB,GAAIH,KAAD,IAAW;AACvCD,EAAAA,SAAS,CAACC,KAAD,CAAT;AACA,SAAM;AACFL,IAAAA,IAAI,EAACL,kBADH;AAEFM,IAAAA,OAAO,EAAEI;AAFP,GAAN;AAOH,CATM;AAWP,OAAO,MAAMI,aAAa,GAAG,MAAM;AAC/B,SAAO;AACHT,IAAAA,IAAI,EAAEJ;AADH,GAAP;AAIH,CALM;AAMP,OAAO,MAAMc,SAAS,GAAG,MAAM;AAC3B,SAAO;AACHV,IAAAA,IAAI,EAACH;AADF,GAAP;AAGH,CAJM,C,CAOP;;AACA,OAAO,MAAMc,SAAS,GAAG,CAAC;AAACZ,EAAAA,KAAD;AAAOa,EAAAA;AAAP,CAAD,KAAsB;AAE3C,SAAOC,QAAQ,IAAG;AAEfA,IAAAA,QAAQ,CAACH,SAAS,EAAV,CAAR;AACA,QAAII,QAAQ,GAAE;AACbf,MAAAA,KAAK,EAACA,KADO;AAEba,MAAAA,QAAQ,EAACA,QAFI;AAGbG,MAAAA,iBAAiB,EAAE;AAHN,KAAd;AAKFvB,IAAAA,KAAK,CACJwB,IADD,CACM,gCADN,EACuCF,QADvC,EAECG,IAFD,CAEMC,QAAQ,IAAG;AACbL,MAAAA,QAAQ,CAACL,gBAAgB,CAACU,QAAQ,CAACC,IAAT,CAAcd,KAAf,CAAjB,CAAR;AACH,KAJD,EAKCe,KALD,CAKOC,GAAG,IAAI;AACXR,MAAAA,QAAQ,CAACJ,aAAa,EAAd,CAAR;AACF,KAPD;AASA,GAjBD;AAkBH,CApBM","sourcesContent":["import axios from 'axios';\n\nimport {\n    EMAIL_CHANGED,\n     PASSWORD_CHANGED,\n     LOGIN_USER_SUCCESS,\n     LOGIN_USER_FAIL,\n     LOGIN_USER\n    } from './types';\n\nexport const emailChanged = (email) =>{\n    return{\n        type:EMAIL_CHANGED,\n        payload:email\n    };\n};\n\nexport const passwordChanged = (text) =>{\n    return{\n        type:PASSWORD_CHANGED,\n        payload:text\n    };\n};\nconst passtoken = (token) =>{\n   \n    localStorage.setItem('jwtToken',token);\n    // let value = localStorage.getItem('jwtToken');\n   \n   \n}\nexport const loginUserSuccess = (token) => {\n    passtoken(token);\n    return{\n        type:LOGIN_USER_SUCCESS,\n        payload: token\n    };\n   \n\n    \n}; \n\nexport const loginUserFail = () => {\n    return {\n        type: LOGIN_USER_FAIL\n\n    };\n};\nexport const authStart = () => {\n    return {\n        type:LOGIN_USER\n    };\n};\n\n\n//curly braces implies thsat the function is expected to be called with objects\nexport const loginUser = ({email,password}) => {\n   \n    return dispatch =>{\n\n       dispatch(authStart());\n       let authData ={\n        email:email,\n        password:password,\n        returnSecureToken: true\n       };\n     axios\n     .post('http://localhost:5000/api/auth',authData)\n     .then(response =>{\n         dispatch(loginUserSuccess(response.data.token));\n     })\n     .catch(err => {\n        dispatch(loginUserFail());\n     })  \n  \n    };\n};"]},"metadata":{},"sourceType":"module"}