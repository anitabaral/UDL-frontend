{"ast":null,"code":"import sessionStorage from 'react-router-dom';\nimport { YEAR_SELECTION, SEMESTER_SELECTION, GENDER_SELECTION, RESULT_SELECTION, SEARCH_SUCCESS, SEARCH_FALIURE, SEARCH } from './types';\nexport const yearSelection = year => {\n  return {\n    type: YEAR_SELECTION,\n    payload: year\n  };\n};\nexport const semesterSelection = semester => {\n  return {\n    type: SEMESTER_SELECTION,\n    payload: semester\n  };\n};\nexport const genderSelection = gender => {\n  return {\n    type: GENDER_SELECTION,\n    payload: gender\n  };\n};\nexport const resultSelection = result => {\n  return {\n    type: RESULT_SELECTION,\n    payload: result\n  };\n};\nexport const searchSuccess = collection => {\n  return {\n    type: SEARCH_SUCCESS,\n    payload: collection\n  };\n};\nexport const searchFaliure = () => {\n  return {\n    type: SEARCH_FALIURE\n  };\n}; // getToken = async () => {\n//     let value = await sessionStorage.getItem('jwtToken');\n//     return value;   \n//     // const headers = {\n//     //  Authorization : value,\n//     //  Content: application/json\n//     // };\n//     // await axios({\n//     //   method: 'GET',\n//     //   url: 'http://localhost:5000/api/query',\n//     //   headers: headers,\n//     // }).then((response) => {\n//     //   console.log(response)\n//     // }).catch((e) => {\n//     //   console.log('wrong')\n//     // });\n//   }\n\nexport const search = (year, semester, gender, result) => {\n  console.log('Hey');\n  return dispatch => {\n    //  value = sessionStorage.getItem('jwtToken');\n    const headers = {\n      \"x-auth-token\": value,\n      \"Content-type\": \"application/jason\"\n    };\n    let data = {\n      year: year\n    };\n    axios({\n      method: 'GET',\n      url: 'http://localhost:5000/api/query',\n      headers: headers,\n      body: data\n    }).then(response => {\n      dispatch(searchSuccess(response));\n    }).catch(err => {\n      dispatch(searchFaliure());\n    });\n  };\n};","map":{"version":3,"sources":["/home/anita/minorProjects/UDL_Backend/UDL-frontend-/src/actions/academicactions/index.js"],"names":["sessionStorage","YEAR_SELECTION","SEMESTER_SELECTION","GENDER_SELECTION","RESULT_SELECTION","SEARCH_SUCCESS","SEARCH_FALIURE","SEARCH","yearSelection","year","type","payload","semesterSelection","semester","genderSelection","gender","resultSelection","result","searchSuccess","collection","searchFaliure","search","console","log","dispatch","headers","value","data","axios","method","url","body","then","response","catch","err"],"mappings":"AACA,OAAOA,cAAP,MAA2B,kBAA3B;AAEA,SACIC,cADJ,EAEIC,kBAFJ,EAGIC,gBAHJ,EAIIC,gBAJJ,EAKIC,cALJ,EAMIC,cANJ,EAOIC,MAPJ,QAQO,SARP;AAUA,OAAO,MAAMC,aAAa,GAAIC,IAAD,IAAU;AACnC,SAAO;AACHC,IAAAA,IAAI,EAACT,cADF;AAEHU,IAAAA,OAAO,EAACF;AAFL,GAAP;AAIH,CALM;AAOP,OAAO,MAAMG,iBAAiB,GAAIC,QAAD,IAAa;AAC1C,SAAM;AACFH,IAAAA,IAAI,EAACR,kBADH;AAEFS,IAAAA,OAAO,EAACE;AAFN,GAAN;AAKH,CANM;AAQP,OAAO,MAAMC,eAAe,GAAIC,MAAD,IAAY;AACvC,SAAO;AACHL,IAAAA,IAAI,EAACP,gBADF;AAEHQ,IAAAA,OAAO,EAACI;AAFL,GAAP;AAIH,CALM;AAOP,OAAO,MAAMC,eAAe,GAAIC,MAAD,IAAY;AACvC,SAAO;AACHP,IAAAA,IAAI,EAACN,gBADF;AAEHO,IAAAA,OAAO,EAAEM;AAFN,GAAP;AAIH,CALM;AAMP,OAAO,MAAMC,aAAa,GAAIC,UAAD,IAAgB;AACzC,SAAO;AACHT,IAAAA,IAAI,EAACL,cADF;AAEHM,IAAAA,OAAO,EAACQ;AAFL,GAAP;AAIH,CALM;AAMP,OAAO,MAAMC,aAAa,GAAG,MAAM;AAC/B,SAAO;AACHV,IAAAA,IAAI,EAACJ;AADF,GAAP;AAGH,CAJM,C,CAKP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,OAAO,MAAMe,MAAM,GAAG,CAACZ,IAAD,EAAMI,QAAN,EAAeE,MAAf,EAAsBE,MAAtB,KAAiC;AAEhDK,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACC,SAAOC,QAAQ,IAAI;AACnB;AACA,UAAMC,OAAO,GAAE;AACX,sBAAgBC,KADL;AAEX,sBAAgB;AAFL,KAAf;AAKA,QAAIC,IAAI,GAAG;AACPlB,MAAAA,IAAI,EAACA;AADE,KAAX;AAIAmB,IAAAA,KAAK,CAAC;AACFC,MAAAA,MAAM,EAAE,KADN;AAEFC,MAAAA,GAAG,EAAE,iCAFH;AAGFL,MAAAA,OAAO,EAACA,OAHN;AAIFM,MAAAA,IAAI,EAAEJ;AAJJ,KAAD,CAAL,CAKGK,IALH,CAKQC,QAAQ,IAAG;AACfT,MAAAA,QAAQ,CAAEN,aAAa,CAACe,QAAD,CAAf,CAAR;AACH,KAPD,EAOGC,KAPH,CAOSC,GAAG,IAAI;AACZX,MAAAA,QAAQ,CAACJ,aAAa,EAAd,CAAR;AACH,KATD;AAaL,GAxBK;AAyBP,CA5BM","sourcesContent":["\nimport sessionStorage from 'react-router-dom';\n\nimport {\n    YEAR_SELECTION,\n    SEMESTER_SELECTION,\n    GENDER_SELECTION,\n    RESULT_SELECTION,\n    SEARCH_SUCCESS,\n    SEARCH_FALIURE,\n    SEARCH\n} from './types';\n\nexport const yearSelection = (year) => {\n    return {\n        type:YEAR_SELECTION,\n        payload:year\n    }\n}\n\nexport const semesterSelection = (semester) =>{\n    return{\n        type:SEMESTER_SELECTION,\n        payload:semester\n    }\n    \n}\n\nexport const genderSelection = (gender) => {\n    return {\n        type:GENDER_SELECTION,\n        payload:gender\n    }\n}\n\nexport const resultSelection = (result) => {\n    return {\n        type:RESULT_SELECTION,\n        payload: result\n    }\n}\nexport const searchSuccess = (collection) => {\n    return {\n        type:SEARCH_SUCCESS,\n        payload:collection\n    }\n}\nexport const searchFaliure = () => {\n    return {\n        type:SEARCH_FALIURE\n    }\n}\n// getToken = async () => {\n//     let value = await sessionStorage.getItem('jwtToken');\n//     return value;   \n//     // const headers = {\n//     //  Authorization : value,\n//     //  Content: application/json\n//     // };\n//     // await axios({\n//     //   method: 'GET',\n//     //   url: 'http://localhost:5000/api/query',\n//     //   headers: headers,\n//     // }).then((response) => {\n//     //   console.log(response)\n//     // }).catch((e) => {\n//     //   console.log('wrong')\n//     // });\n   \n//   }\n\nexport const search = (year,semester,gender,result) => {\n   \n       console.log('Hey');\n        return dispatch => {\n        //  value = sessionStorage.getItem('jwtToken');\n        const headers ={\n            \"x-auth-token\": value,\n            \"Content-type\": \"application/jason\"\n\n        };\n        let data = {\n            year:year,\n\n        }\n        axios({\n            method: 'GET',\n            url: 'http://localhost:5000/api/query',\n            headers:headers,\n            body :data\n        }).then(response =>{\n            dispatch (searchSuccess(response));\n        }).catch(err => {\n            dispatch(searchFaliure());\n        })\n\n\n    \n  }\n}"]},"metadata":{},"sourceType":"module"}