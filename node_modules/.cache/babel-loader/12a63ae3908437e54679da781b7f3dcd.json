{"ast":null,"code":"import axios from 'axios';\nimport { YEAR_SELECTION, SEMESTER_SELECTION, GENDER_SELECTION, RESULT_SELECTION, SEARCH_SUCCESS, SEARCH_FALIURE, SEARCH } from './types';\nexport const yearSelection = year => {\n  return {\n    type: YEAR_SELECTION,\n    payload: year\n  };\n};\nexport const semesterSelection = semester => {\n  return {\n    type: SEMESTER_SELECTION,\n    payload: semester\n  };\n};\nexport const genderSelection = gender => {\n  return {\n    type: GENDER_SELECTION,\n    payload: gender\n  };\n};\nexport const resultSelection = result => {\n  return {\n    type: RESULT_SELECTION,\n    payload: result\n  };\n};\nexport const searchSuccess = collection => {\n  console.log(collection);\n  return {\n    type: SEARCH_SUCCESS,\n    payload: collection\n  };\n};\nexport const searchFaliure = () => {\n  return {\n    type: SEARCH_FALIURE\n  };\n};\nexport const search = (years, semester, gender, result) => {\n  let value = localStorage.getItem('jwtToken');\n  return dispatch => {\n    const headers = {\n      \"x-auth-token\": value,\n      \"Content-type\": \"application/json\"\n    };\n    console.log(years);\n    console.log(semester);\n    console.log(gender);\n    const data = {\n      \"year\": years\n    };\n    axios({\n      method: 'GET',\n      url: 'http://localhost:5000/api/query',\n      headers: headers,\n      Body: data\n    }).then(response => {\n      dispatch(searchSuccess(response.data));\n    }).catch(err => {\n      dispatch(searchFaliure());\n    });\n  };\n};","map":{"version":3,"sources":["/home/anita/minorProjects/UDL_Backend/UDL-frontend-/src/actions/academicactions/index.js"],"names":["axios","YEAR_SELECTION","SEMESTER_SELECTION","GENDER_SELECTION","RESULT_SELECTION","SEARCH_SUCCESS","SEARCH_FALIURE","SEARCH","yearSelection","year","type","payload","semesterSelection","semester","genderSelection","gender","resultSelection","result","searchSuccess","collection","console","log","searchFaliure","search","years","value","localStorage","getItem","dispatch","headers","data","method","url","Body","then","response","catch","err"],"mappings":"AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SACIC,cADJ,EAEIC,kBAFJ,EAGIC,gBAHJ,EAIIC,gBAJJ,EAKIC,cALJ,EAMIC,cANJ,EAOIC,MAPJ,QAQO,SARP;AAUA,OAAO,MAAMC,aAAa,GAAIC,IAAD,IAAU;AACnC,SAAO;AACHC,IAAAA,IAAI,EAACT,cADF;AAEHU,IAAAA,OAAO,EAACF;AAFL,GAAP;AAIH,CALM;AAOP,OAAO,MAAMG,iBAAiB,GAAIC,QAAD,IAAa;AAC1C,SAAM;AACFH,IAAAA,IAAI,EAACR,kBADH;AAEFS,IAAAA,OAAO,EAACE;AAFN,GAAN;AAKH,CANM;AAQP,OAAO,MAAMC,eAAe,GAAIC,MAAD,IAAY;AACvC,SAAO;AACHL,IAAAA,IAAI,EAACP,gBADF;AAEHQ,IAAAA,OAAO,EAACI;AAFL,GAAP;AAIH,CALM;AAOP,OAAO,MAAMC,eAAe,GAAIC,MAAD,IAAY;AACvC,SAAO;AACHP,IAAAA,IAAI,EAACN,gBADF;AAEHO,IAAAA,OAAO,EAAEM;AAFN,GAAP;AAIH,CALM;AAOP,OAAO,MAAMC,aAAa,GAAIC,UAAD,IAAgB;AACzCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACA,SAAO;AACHT,IAAAA,IAAI,EAACL,cADF;AAEHM,IAAAA,OAAO,EAACQ;AAFL,GAAP;AAIH,CANM;AAOP,OAAO,MAAMG,aAAa,GAAG,MAAM;AAC/B,SAAO;AACHZ,IAAAA,IAAI,EAACJ;AADF,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMiB,MAAM,GAAG,CAACC,KAAD,EAAOX,QAAP,EAAgBE,MAAhB,EAAuBE,MAAvB,KAAkC;AACpD,MAAIQ,KAAK,GAAEC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX;AAEA,SAAOC,QAAQ,IAAI;AAIf,UAAMC,OAAO,GAAE;AACX,sBAAgBJ,KADL;AAEX,sBAAgB;AAFL,KAAf;AAMAL,IAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYN,MAAZ;AACA,UAAMe,IAAI,GAAG;AAET,cAAON;AAFE,KAAb;AAOAxB,IAAAA,KAAK,CAAC;AACF+B,MAAAA,MAAM,EAAE,KADN;AAEFC,MAAAA,GAAG,EAAE,iCAFH;AAGFH,MAAAA,OAAO,EAACA,OAHN;AAIFI,MAAAA,IAAI,EAACH;AAJH,KAAD,CAAL,CAKGI,IALH,CAKQC,QAAQ,IAAG;AAEfP,MAAAA,QAAQ,CAAEV,aAAa,CAACiB,QAAQ,CAACL,IAAV,CAAf,CAAR;AACH,KARD,EAQGM,KARH,CAQSC,GAAG,IAAI;AACZT,MAAAA,QAAQ,CAACN,aAAa,EAAd,CAAR;AACH,KAVD;AAcL,GAlCC;AAoCH,CAvCM","sourcesContent":["\nimport axios from 'axios';\n\nimport {\n    YEAR_SELECTION,\n    SEMESTER_SELECTION,\n    GENDER_SELECTION,\n    RESULT_SELECTION,\n    SEARCH_SUCCESS,\n    SEARCH_FALIURE,\n    SEARCH\n} from './types';\n\nexport const yearSelection = (year) => {\n    return {\n        type:YEAR_SELECTION,\n        payload:year\n    }\n}\n\nexport const semesterSelection = (semester) =>{\n    return{\n        type:SEMESTER_SELECTION,\n        payload:semester\n    }\n    \n}\n\nexport const genderSelection = (gender) => {\n    return {\n        type:GENDER_SELECTION,\n        payload:gender\n    }\n}\n\nexport const resultSelection = (result) => {\n    return {\n        type:RESULT_SELECTION,\n        payload: result\n    }\n}\n\nexport const searchSuccess = (collection) => {\n    console.log(collection)\n    return {\n        type:SEARCH_SUCCESS,\n        payload:collection\n    }\n}\nexport const searchFaliure = () => {\n    return {\n        type:SEARCH_FALIURE\n    }\n}\n \nexport const search = (years,semester,gender,result) => {\n    let value= localStorage.getItem('jwtToken');\n   \n    return dispatch => {\n         \n        \n\n        const headers ={\n            \"x-auth-token\": value,\n            \"Content-type\": \"application/json\"\n\n        };\n        \n        console.log(years);\n        console.log(semester);\n        console.log(gender)\n        const data = {\n            \n            \"year\":years,\n            \n\n\n        };\n        axios({\n            method: 'GET',\n            url: 'http://localhost:5000/api/query',\n            headers:headers,\n            Body:data\n        }).then(response =>{\n            \n            dispatch (searchSuccess(response.data));\n        }).catch(err => {\n            dispatch(searchFaliure());\n        })\n\n\n    \n  } \n\n}"]},"metadata":{},"sourceType":"module"}